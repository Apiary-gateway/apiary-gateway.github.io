---
import Image from '../../components/Image.astro';

const images = {
  comparison: "/images/02-comparison.png",
  guardrailsObject: "/images/03-guardrails-object.png",
  guardrailsExample: "/images/04-guardrails-example.png",
};
---

<section id="our-solution">
    <h2>Our Solution</h2>

    <p>Apiary bridges this gap by providing a comprehensive, self-managed solution with built-in infrastructure. It's easy to deploy, and gives developers complete control over their data and infrastructure. </p>

    <Image src={images.comparison} alt="Apiary Comparison" caption="Apiary Comparison"/>

    <h3 id="differentiators">Differentiators</h3>

    <p>Apiary differentiates itself from existing solutions through a unique combination of features:</p>

    <ol>
        <li>
            <strong>Complete Data Control</strong>
            <p>Unlike managed services like Cloudflare AI Gateway, Apiary runs entirely within your own AWS account, ensuring that sensitive prompt data and responses never leave your control.</p>
        </li>
        
        <li>
            <strong>Built-in Infrastructure</strong>
            <p>Unlike platforms like LiteLLM that provide only code, Apiary includes pre-configured serverless infrastructure that can be deployed with minimal setup, offering the ease of setup typically found in managed services, without the data sharing concerns.</p>
        </li>
        
        <li>
            <strong>Comprehensive Feature Set</strong>
            <p>Apiary includes advanced features that are often available only in premium tiers, or that require third-party integrations and configuration, when using existing offerings:</p>
            <ul>
                <li>Semantic caching, which compares the meaning of new requests to previous ones using vector embeddings</li>
                <li>Conversation thread management, for maintaining chat history across models</li>
                <li>Content guardrails, for detecting and managing undesirable responses</li>
                <li>Unified observability across all model providers</li>
            </ul>
        </li>
        
        <li>
            <strong>Cost Efficiency</strong>
            <p>Apiary is free and open-source, requiring only the cost of the AWS infrastructure it runs on and the fees charged by LLM providers.</p>
        </li>
    </ol>

    <h3 id="target-audience">Who Apiary Is For</h3>

    <p>Apiary is built for small to medium-sized development teams working on AI-integrated applications where reliability, cost-efficiency, configurability, and observability are crucial. It provides a centralized point for managing aspects like API keys and guardrails, minimizing the coordination needed between different systems and team members. Built-in observability allows developers to track the life cycle of a request through the system, and monitor where errors may be occurring. Features like conditional routing, fallbacks, and caching help to optimize application performance and costs. Each of these features is configurable, allowing developers to optimize Apiary for their specific applications' needs.</p>

    <h3 id="getting-started">Using Apiary</h3>

        <p>Users can get started with our Command Line Interface (CLI) tool. The CLI tool provides commands to automatically deploy (and destroy) Apiary infrastructure using AWS Cloud Development Kit (CDK). Once the user's infrastructure is deployed, they can navigate to the observability and management dashboard to configure their desired settings. Users can configure settings for model traffic routing and fallbacks, simple and semantic caching, guardrails, and the system prompt.</p>
    
    <Image src={images.guardrailsObject} alt="Guardrails Object" caption="Guardrails Object"/>

    <Image src={images.guardrailsExample} alt="Guardrails Example" caption="Guardrails Example"/>



    <p>Once configured, the Apiary Software Development Kit (SDK) can be used to send client requests to the system. The observability and management dashboard provides high-level information on LLM requests and responses, as well as the option to view details for specific requests and responses.</p>

    <p><strong>Screenshot: logs overview screen</strong></p>
    <p><strong>Screenshot: logs details</strong></p>
    <p><strong>Screenshot: specific request/response modal</strong></p>
    <p><strong>Screenshot: routing for specific request/response</strong></p>
    <p><strong>Diagram: life cycle of a request through Apiary (ex. client → API Gateway → cache → etc.)</strong></p>

    <ul>
        <li>Each step in the process is fully configurable</li>
    </ul>

    <p>Delivering all of these features in a unified, self-managed system required careful design decisions and planning. In the next section, we'll walk through our rationale behind these decisions and how we built it.</p>
</section>