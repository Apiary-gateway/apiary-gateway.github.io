---
// src/pages/index.astro
import BaseLayout from '../layouts/BaseLayout.astro';

const title = "Apiary"
---

<nav class="navbar">
  <div class="navbar-container">
    <div class="logo-container">
      <button class="hamburger" aria-label="Toggle menu">
        <span></span>
        <span></span>
        <span></span>
      </button>
      <a href="/" class="logo">
        <img src="/apiary-logo.png" alt="Apiary Logo" />
      </a>
      <span class="brand-name"><a href="/">{title}</a></span>
    </div>
    <div class="nav-links">
      <a href="/case-study">Case Study</a>
      <a href="/docs">Docs</a>
      <a href="/team">Team</a>
      <a href="/contact" class="external-link">
        Github
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
          <polyline points="15 3 21 3 21 9"></polyline>
          <line x1="10" y1="14" x2="21" y2="3"></line>
        </svg>
      </a>
      <button class="theme-toggle" aria-label="Toggle theme">
        <svg class="sun-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <circle cx="12" cy="12" r="5"></circle>
          <line x1="12" y1="1" x2="12" y2="3"></line>
          <line x1="12" y1="21" x2="12" y2="23"></line>
          <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
          <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
          <line x1="1" y1="12" x2="3" y2="12"></line>
          <line x1="21" y1="12" x2="23" y2="12"></line>
          <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
          <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
        </svg>
        <svg class="moon-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
        </svg>
      </button>
    </div>
  </div>

  <div class="mobile-menu">
    <button class="close-btn" aria-label="Close menu">Ã—</button>
    <div class="mobile-menu-content">
      <a href="/case-study">Case Study</a>
      <hr />
      <a href="/docs">Docs</a>
      <hr />
      <a href="/team">Team</a>
      <hr />
      <a href="/contact" class="external-link">
        Github
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
          <polyline points="15 3 21 3 21 9"></polyline>
          <line x1="10" y1="14" x2="21" y2="3"></line>
        </svg>
      </a>
    </div>
  </div>
</nav>

<style>
  .navbar {
    background-color: var(--color-navbar);
    padding: 1rem 0;
    border-bottom: 1px solid var(--color-navbar-border);
    width: 100%;
    position: relative;
    z-index: 100;
  }

.navbar-container {
  width: 100%;
  padding: 0 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

  .logo-container {
    display: flex;
    align-items: center;
  }

  .logo img {
    height: 48px;
    width: auto;
  }

  .brand-name {
    color: var(--color-text);
    font-weight: 700;
    font-size: 1.5rem;
  }

  .nav-links {
    display: flex;
    gap: 1.2rem;
    align-items: center;
  }

  .nav-links a {
    text-decoration: none;
    color: var(--color-text);
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    transition: color var(--transition-normal);
  }

  .nav-links a:hover {
    color: var(--color-primary);
  }

  .external-link svg {
    width: 14px;
    height: 14px;
  }

  .hamburger {
    display: none;
    flex-direction: column;
    gap: 4px;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
  }

  .hamburger span {
    display: block;
    width: 24px;
    height: 2px;
    background-color: var(--color-text);
    transition: all 0.3s ease;
  }

  .theme-toggle {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    color: var(--color-text);
  }

  .theme-toggle svg {
    width: 24px;
    height: 24px;
  }

  .moon-icon {
    display: none;
  }

  [data-theme="dark"] .sun-icon {
    display: none;
  }

  [data-theme="dark"] .moon-icon {
    display: block;
  }

  .mobile-menu {
    position: fixed;
    top: 0;
    left: -100%;
    width: 80%;
    max-width: 300px;
    height: 100vh;
    background-color: var(--color-navbar);
    transition: left 0.3s ease;
    z-index: 999;
    padding: 2rem 1rem;
  }

  .mobile-menu.active {
    left: 0;
  }

  .mobile-menu .close-btn {
    background: none;
    border: none;
    font-size: 2rem;
    color: var(--color-text);
    cursor: pointer;
    position: absolute;
    top: 1rem;
    right: 1rem;
  }

  .mobile-menu-content {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-top: 3rem;
  }

  .mobile-menu-content a {
    color: var(--color-text);
    text-decoration: none;
    font-size: 1.2rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .mobile-menu-content hr {
    border: 0;
    border-top: 1px solid var(--color-navbar-border);
  }

  @media (max-width: 768px) {
    .hamburger {
      display: flex;
    }

    .nav-links {
      display: none;
    }
  }
</style>

<script>
  const hamburger = document.querySelector('.hamburger');
  const mobileMenu = document.querySelector('.mobile-menu');
  const closeBtn = document.querySelector('.close-btn');

  hamburger.addEventListener('click', () => {
    mobileMenu.classList.add('active');
  });

  closeBtn.addEventListener('click', () => {
    mobileMenu.classList.remove('active');
  });

  const themeToggle = document.querySelector('.theme-toggle');
  const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');

  function setTheme(theme) {
    document.documentElement.setAttribute('data-theme', theme);
    localStorage.setItem('theme', theme);
  }

  function toggleTheme() {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    setTheme(currentTheme === 'dark' ? 'light' : 'dark');
  }

  const savedTheme = localStorage.getItem('theme') || (prefersDarkScheme.matches ? 'dark' : 'light');
  setTheme(savedTheme);

  themeToggle.addEventListener('click', toggleTheme);
</script>
